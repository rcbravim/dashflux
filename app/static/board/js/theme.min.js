function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
const csrftoken = getCookie('csrftoken');

$(document).ready(function(){
    $('.mask_money').mask('#.##0,00', {reverse: true});
    $('.mask_number').mask('00000000000000000000');
    $('.mask_date_short').mask('00/0000');
    $('.mask_phone_client').on('input', function() {
        var valor = $(this).val();
        var mascara = (valor.length < 14) ? '(00) 0000-0000' : '(00) 0 0000-0000';
        $(this).mask(mascara);
    });

    // FOR TELEPHONES
    var docMaskBehaviorPhone = function (val) {
        var shape;
        if (val.replace(/\D/g, '').substr(0, 4).includes('0800')) { shape = '0000 000 0000'; }
        else { shape = val.replace(/\D/g, '').length < 11 ? '(00) 0000-00009' : '(00) 0 0000-0000'; }
        return shape;
    }

    var spPOptions = {
        onKeyPress: function(val, e, field, options) {
        field.mask(docMaskBehaviorPhone.apply({}, arguments), options);
        },
        clearIfNotMatch: true
    }

    function initMasks() {
        $('.mask_money').mask('#,##0.00', {reverse: true});
        $('.mask_phone_brazil').mask(docMaskBehaviorPhone, spPOptions);
        $('.mask_phone_united_states_of_america').mask('000-000-0000');
        $('.mask_phone_canada').mask('000-000-0000');
        $('.mask_phone_angola').mask('000-000-000');
    }

    // Sidebar controll
    let actual = window.location.href;
    if (actual.search('/board/labels/') > 0) {
        $('#lables-menu').addClass('mm-active');
        $('#lables-menu').find('ul').addClass('mm-show');
        if (actual.search('/financial/form/') > 0) {
            $('li').find('[key="t-financial"]').addClass('active');
        } else if (actual.search('/beneficiaries/form/') > 0) {
            $('li').find('[key="t-beneficiaries"]').addClass('active');
        } else if (actual.search('/categories/form/') > 0) {
            $('li').find('[key="t-categories"]').addClass('active');
        } else if (actual.search('/clients/form/') > 0) {
            $('li').find('[key="t-clients"]').addClass('active');
        }
    } else if (actual.search('/board/profile/') > 0) {
        $('#profile-menu').addClass('mm-active');
    }

    // dashboard index "View Details", "Edit" and "Delete"
    $(document).on('click', '.index_details, .index_edit, .index_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('index_details');
        let edit = $(this).hasClass('index_edit');
        let del = $(this).hasClass('index_del');
        $.ajax({
            method: 'POST',
            url: 'index_edit',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del || edit) {

                    // modal information

                    // date
                    $('.modal_entry_date span').text(data['entry']['date']); // for del form
                    $('.modal_entry_date').val(data['entry']['date']); // for edit form

                    // category information
                    $('.modal_category_del span').text(data['category']['name']); // for del form
                    $('.modal_category option[value="' + data['category']['id'] + '"]').prop('selected', true); // for edit form

                    // description
                    if (data['entry']['description']) {
                        $('.modal_description span').text(data['entry']['description']);
                    }

                    // establishment
                    $('.modal_establishment_del span').text(data['establishment']['name']);
                    $('.modal_establishment option[value="' + data['establishment']['id'] + '"]').prop('selected', true);

                    if (data['account']['is_bank'] == true) {
                        $('.modal_account option[value="' + data['account']['id'] + '"]').prop('selected', true);
                    }

                    // income or expense
                    let type_transaction = data['entry']['amount'] < 0 ? 2 : 1;
                    $('.modal_transaction_type option[value="'+type_transaction+'"]').prop('selected', true);
                    $('.modal_transaction_type span').text(type_transaction == 2 ? 'Saída' : 'Entrada'); // for del form

                    // situation
                    if (data['entry']['situation'] == 1) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-primary ').text('Pago');
                    } else if (data['entry']['situation'] == 2) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-secondary ').text('Aberto');
                    } else if (data['entry']['situation'] == 3) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-danger ').text('Em Negociação');
                    } else if (data['entry']['situation'] == 4) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-success ').text('Recebido');
                    } else {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-warning ').text('Agendado');
                    }
                    $('.situation_modal option[value="'+data['entry']['situation']+'"]').prop('selected', true);

                    // amount
                    amount = Math.abs(data['entry']['amount'])
                    $('.modal_amount').val(formatCurrency(amount).replace('R$', ''));
                    $('.modal_amount span').text(formatCurrency(amount));

                }

                if (del) {
                    $('#del_index').val(formData['detail']);
                    $('#modal_entry_date_delete').val(data['entry']['date']);

                } else if (edit) {
                    $('#edit_index').val(formData['detail']);
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

//    // dashboard index - category selection
//    $(document).on('change', '.category_modal, .category_modal_edit', function() {
//        let formData = {'category': $(this).val()}
//        let edit = $(this).hasClass('category_modal_edit');
//        $.ajax({
//            method: 'POST',
//            url: 'dashboard_category_ajax',
//            headers: {'X-CSRFToken': csrftoken},
//            mode: 'same-origin', // Do not send CSRF token to another domain.
//            data: formData,
//            success: function(data) {
//                data = JSON.parse(data);
//                if (edit) {
//                    $('.subcategory_modal').find('option').remove().end()
//                    $(data).each(function(index, value) {
//                        $('.subcategory_modal').append(new Option(value['subcategory'], value['slug']));
//                    });
//                } else {
//                    $('#subcategory').find('option').remove().end()
//                    $(data).each(function(index, value) {
//                        $('#subcategory').append(new Option(value['subcategory'], value['slug']));
//                    });
//                }
//            },
//            error: function(data) {
//                alert('Data not found');
//            }
//        });
//    });

    // dashboard index - calendar
    $(document).on('click', '.move-month', function() {
        let actual = window.location.href;
        actual = actual.split('?')[0]
        let renderRange = $('#renderRange').val()
        let month = parseInt(renderRange.split('.')[0])
        let year = parseInt(renderRange.split('.')[1])

        let action = $(this).data('value');
        if (action == 'move-next') {
            if (month == 12) {
                month = 1
                year = year + 1
            } else {
                month = month + 1
            }
        } else if (action == 'move-prev') {
            if (month == 1) {
                month = 12
                year = year - 1
            } else {
                month = month - 1
            }
        } else if (action == 'goto') {
            let goto = $('#goto').val()
            if (isDateShort(goto)) {
                month = goto.split('/')[0]
                year = goto.split('/')[1]
            }
        }
        window.location.href = actual+'?y='+year+'&m='+month
    });

    // dashboard index - calendar
    $(document).on('click', '.move-today', function() {
        let actual = window.location.href;
        actual = actual.split('?')[0]
        window.location.href = actual
    });
    
    // establishments "View Details", "Edit" and "Delete"
    $(document).on('click', '.establishment_details, .establishment_edit, .establishment_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('establishment_details'); // not used
        let edit = $(this).hasClass('establishment_edit');
        let del = $(this).hasClass('establishment_del');
        $('.valid_entry_add').nextAll('div:first').text('');
        $('.valid_entry_edit').nextAll('div:first').text('');
        $.ajax({
            method: 'POST',
            url: 'establishments_edit',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (del) {
                    $('.modal_name span').text(data['establishment']['name']);
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                    } else {
                        $('#del_establishment').val(formData['detail'])
                    }
                } else if (edit) {
                    $('input[id=est_name_edit').val(data['establishment']['name']);
                    $('#edit_establishment').val(formData['detail'])
                }
            },
            error: function(data) {
                alert('Data not found');
            }

        });
    });

    // validation establishment before edit
    $("#add_establishment_form, #edit_establishment_form").submit(function(event) {
        event.preventDefault();
        let est_name_add = $('#est_name_add').val()
        let est_name_edit = $('#est_name_edit').val()

        if (est_name_add == '' && est_name_edit == '') { return }

        let est_name = est_name_add != '' ? est_name_add : est_name_edit
        let formData = {'est_name': est_name }
        $.ajax({
            method: 'POST',
            url: 'establishment_return_id_by_name',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (data['establishment']['id'] != null) {
                    if (est_name_edit) {
                        $('.valid_entry_edit').nextAll('div:first').text('Estabelecimento já existe.');
                        $('#est_name_edit').val(est_name_edit);
                        $('#est_name_edit').addClass('is-invalid');
                    } else {
                        $('.valid_entry').nextAll('div:first').text('Estabelecimento já existe.');
                        $('#est_name_add').val(est_name_add);
                        $('#est_name_add').addClass('is-invalid');
                    }
                }
                else {
                    if (est_name_edit) {
                        $("#edit_establishment_form")[0].submit();
                    } else {
                        $("#add_establishment_form")[0].submit();
                    }
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

//    // beneficiaries labels "Edit Beneficiary Type"
//    $(document).on('click', '#checkbox_edit', function() {
//        let box = $('#checkbox_edit').prop('checked');
//        if (box) {
//            $('.checkbox_edit').prop('disabled', false);
//            $('.checkbox_edit').prop('required', true);
//            $('.checkbox_edit').addClass('valid_entry');
//        } else {
//            $('.checkbox_edit').prop('disabled', true);
//            $('.checkbox_edit').prop('required', false);
//            $('.checkbox_edit').removeClass('valid_entry');
//        }
//    });

    // categories labels form select2
    $('.s2_tags_true').select2({
        tags: true
    });

    // categories labels form - check category existence to block type
    $(document).on('change', '.check_existence', function() {
        let formData = {'name': $(this).val()}
        $.ajax({
            method: 'POST',
            url: 'labels_categories_form_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (data) {
                    if (data['type'] == 1) {
                        $('#inlineRadio1').prop('checked', true);
                        $('#inlineRadio2').prop('checked', false);
                    } else {
                        $('#inlineRadio1').prop('checked', false);
                        $('#inlineRadio2').prop('checked', true);
                    }
                    $('#inlineRadio1').prop('disabled', true);
                    $('#inlineRadio1').prop('required', false);
                    $('#inlineRadio2').prop('disabled', true);
                    $('#inlineRadio2').prop('required', false);
                } else {
                    $('#inlineRadio1').prop('disabled', false);
                    $('#inlineRadio1').prop('required', true);
                    $('#inlineRadio2').prop('disabled', false);
                    $('#inlineRadio2').prop('required', true);
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // categories "View Details", "Edit" and "Delete"  // details not implemented
    $(document).on('click', '.categories_details, .categories_edit, .categories_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('categories_details');
        let edit = $(this).hasClass('categories_edit');
        let del = $(this).hasClass('categories_del');
        $.ajax({
            method: 'POST',
            url: 'categories_edit',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    $('.cat_name_del span').text(data['category']['name']);

                    $('.cat_type_del span').removeClass()
                    if (data['category']['type'] == 1) {
                        $('.cat_type_del span').text('Entrada').addClass('badge-soft-success')
                    } else {
                        $('.cat_type_del span').text('Saída').addClass('badge-soft-danger')
                    }

                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                        if (data['type'] == 1) {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-success ').text('Renda');
                        } else {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-danger ').text('Gasto');
                        }
                    } else {
                        $('#del_category').val(formData['detail'])
                    }
                } else if (edit) {
                    if (data['category']['type'] == 1) {
                        $('#inlineRadio1').prop('checked', true);
                        $('#inlineRadio2').prop('checked', false);
                    } else {
                        $('#inlineRadio1').prop('checked', false);
                        $('#inlineRadio2').prop('checked', true);
                    }
                    $('#cat_type_edit').val(data['category']['type']);
                    $('#cat_name_edit').val(data['category']['name']);
                    $('#edit_category').val(formData['detail'])
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    $('#addCategoryModal, #editCategoryModal, #addEstablishmentModal, #editEstablishmentModal').on('hide.bs.modal', function() {

        // common
        $('.valid_entry').removeClass('is-invalid')
        $('.valid_entry').val('')
        $('.valid_entry_add').removeClass('is-invalid')
        $('.valid_entry_add').val('')
        $('.valid_entry_edit').removeClass('is-invalid')
        $('.valid_entry_edit').val('')

        // establishments
        $('#add_establishment_form').removeClass('was-validated')
        $('#edit_establishment_form').removeClass('was-validated')

        // categories
        $('#add_category_form').removeClass('was-validated')
        $('input[name=inlineRadioAdd1]').prop('checked', false);
        $('input[name=inlineRadioAdd2]').prop('checked', false);
        $('#edit_category_form').removeClass('was-validated')
        $('input[name=inlineRadio1]').prop('checked', false);
        $('input[name=inlineRadio2]').prop('checked', false);

    });

    // validation category before edit
    $("#add_category_form, #edit_category_form").submit(function(event) {
        event.preventDefault();

        let cat_name_add = $('#cat_name_add').val()
        let cat_name_edit = $('#cat_name_edit').val()
        if (cat_name_add == '' && cat_name_edit == '') { return }

        let cat_type_add = false;
        let cat_type_edit = false;
        add_or_edit = cat_name_add ? 'add' : 'edit'

        if (add_or_edit == 'add') {
            let inlineRadioAdd1 = $('#inlineRadioAdd1').prop('checked') ? 1 : false
            let inlineRadioAdd2 = $('#inlineRadioAdd2').prop('checked') ? 2 : false
            cat_type_add = inlineRadioAdd1 || inlineRadioAdd2 || false
            if (!cat_type_add) { return }
        }

        if (add_or_edit == 'edit') {
            let inlineRadio1 = $('#inlineRadio1').prop('checked') ? 1 : false
            let inlineRadio2 = $('#inlineRadio2').prop('checked') ? 2 : false
            cat_type_edit = inlineRadio1 || inlineRadio2 || false
            if (!cat_type_edit && !cat_type_add) { return }
        }

        let cat_name = cat_name_add || cat_name_edit
        let cat_type = cat_type_add || cat_type_edit

        let formData = {
            'cat_name': cat_name,
            'cat_type': cat_type
            }

        $.ajax({
            method: 'POST',
            url: 'category_return_id_by_name',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (data['category']['id'] != null) {
                    if (add_or_edit == 'add') {
                        $('.valid_entry_add').nextAll('div:first').text('Categoria já existe.');
                        $('#cat_name_add').val(cat_name);
                        $('#cat_type_add').val(cat_type);
                        $('#cat_name_add').addClass('is-invalid');
                    } else {
                        $('.valid_entry_edit').nextAll('div:first').text('Categoria já existe.');
                        $('#cat_name_edit').val(cat_name);
                        $('#cat_type_edit').val(cat_type);
                        $('#cat_name_edit').addClass('is-invalid');
                    }
                }
                else {
                    if (add_or_edit == 'add') {
                        $("#add_category_form")[0].submit();
                    } else {
                        $("#edit_category_form")[0].submit();
                    }
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // financial labels "View Details", "Edit" and "Delete"
    $(document).on('click', '.financial_details, .financial_edit, .financial_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('financial_details');
        let edit = $(this).hasClass('financial_edit');
        let del = $(this).hasClass('financial_del');
        $.ajax({
            method: 'POST',
            url: 'labels_financial_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                        if (data['type'] == 1) {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-primary ').text('Cost Center');
                        } else {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-warning ').text('Bank Account');
                        }
                    } else {
                        $('#del_financial').val(formData['detail'])
                    }
                    if (data['type'] == 1) {
                        $('.modal_cost_center span').text(data['cost_center']);
                        if (data['description']) {
                            $('.modal_description').removeClass('d-none');
                            $('.modal_description span').text(data['description']);
                        } else {
                            $('.modal_description').addClass('d-none');
                        }
                        if (details) {
                            $('#cost_center_modal').removeClass('d-none');
                            $('#bank_account_modal').addClass('d-none');
                        } else {
                            $('#cost_center_modal_remove').removeClass('d-none');
                            $('#bank_account_modal_remove').addClass('d-none');
                        }
                    } else {
                        $('.modal_bank span').text(data['bank']);
                        $('.modal_branch span').text(data['branch']);
                        $('.modal_account span').text(data['account']);
                        if (details) {
                            $('#bank_account_modal').removeClass('d-none');
                            $('#cost_center_modal').addClass('d-none');
                        } else {
                            $('#bank_account_modal_remove').removeClass('d-none');
                            $('#cost_center_modal_remove').addClass('d-none');
                        }
                    }
                } else if (edit) {
                    if (data['type'] == 1) {
                        $('#bank').val(data['bank']).prop('required', false);
                        $('#branch').val(data['branch']).prop('required', false);
                        $('#account').val(data['account']).prop('required', false);

                        $('#cost_center').val(data['cost_center']).prop('required', true);
                        $('#description').val(data['description']);
                        $('.cost_center_modal_edit').removeClass('d-none');
                        $('.bank_account_modal_edit').addClass('d-none');
                    } else {
                        $('#cost_center').val(data['cost_center']).prop('required', false);

                        $('#bank').val(data['bank']).prop('required', true);
                        $('#branch').val(data['branch']).prop('required', true);
                        $('#account').val(data['account']).prop('required', true);
                        $('.bank_account_modal_edit').removeClass('d-none');
                        $('.cost_center_modal_edit').addClass('d-none');
                    }
                    $('#edit_financial').val(formData['detail']);
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // financial labels form controll
    $(document).on('change', '#financial_label_choise', function() {
        let label = $(this).val()
        if (label == 'CC') {
            $('#account_label').addClass('d-none');
            $('#cost_center_label').removeClass('d-none');
        } else if (label == 'BA') {
            $('#account_label').removeClass('d-none');
            $('#cost_center_label').addClass('d-none');
        }
    });  
});

// DATETIME TO DATE FORMAT
function datetimeToDateFormat(date) {
    var dateTmp = date.split('T')[0].split('-');
    return [dateTmp[1], dateTmp[2], dateTmp[0]].join('/');
}

// FORMAT CURRENCY
function formatCurrency(amount) {
    amount = new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
    }).format(amount);
    return amount
}

// DATE VALIDATION
function isDateShort(value) {
    return moment(value, 'MM/YYYY', true).isValid();
  }

function isEmpty(obj) {
    return Object.keys(obj).length === 0;
}