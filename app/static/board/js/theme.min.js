function getCookie(name) {
    let cookieValue = null;
    if (document.cookie && document.cookie !== '') {
        const cookies = document.cookie.split(';');
        for (let i = 0; i < cookies.length; i++) {
            const cookie = cookies[i].trim();
            // Does this cookie string begin with the name we want?
            if (cookie.substring(0, name.length + 1) === (name + '=')) {
                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                break;
            }
        }
    }
    return cookieValue;
}
const csrftoken = getCookie('csrftoken');

$(document).ready(function(){
    $('.mask_money').mask('#.##0,00', {reverse: true});
    $('.mask_number').mask('00000000000000000000');
    $('.mask_date_short').mask('00/0000');
    $('.mask_phone_client').on('input', function() {
        var valor = $(this).val();
        var mascara = (valor.length < 14) ? '(00) 0000-0000' : '(00) 0 0000-0000';
        $(this).mask(mascara);
    });

    // FOR TELEPHONES
    var docMaskBehaviorPhone = function (val) {
        var shape;
        if (val.replace(/\D/g, '').substr(0, 4).includes('0800')) { shape = '0000 000 0000'; }
        else { shape = val.replace(/\D/g, '').length < 11 ? '(00) 0000-00009' : '(00) 0 0000-0000'; }
        return shape;
    }

    var spPOptions = {
        onKeyPress: function(val, e, field, options) {
        field.mask(docMaskBehaviorPhone.apply({}, arguments), options);
        },
        clearIfNotMatch: true
    }

    function initMasks() {
        $('.mask_money').mask('#,##0.00', {reverse: true});
        $('.mask_phone_brazil').mask(docMaskBehaviorPhone, spPOptions);
        $('.mask_phone_united_states_of_america').mask('000-000-0000');
        $('.mask_phone_canada').mask('000-000-0000');
        $('.mask_phone_angola').mask('000-000-000');
    }

    // Sidebar controll
    let actual = window.location.href;
    if (actual.search('/board/labels/') > 0) {
        $('#lables-menu').addClass('mm-active');
        $('#lables-menu').find('ul').addClass('mm-show');
        if (actual.search('/financial/form/') > 0) {
            $('li').find('[key="t-financial"]').addClass('active');
        } else if (actual.search('/beneficiaries/form/') > 0) {
            $('li').find('[key="t-beneficiaries"]').addClass('active');
        } else if (actual.search('/categories/form/') > 0) {
            $('li').find('[key="t-categories"]').addClass('active');
        } else if (actual.search('/clients/form/') > 0) {
            $('li').find('[key="t-clients"]').addClass('active');
        }
    } else if (actual.search('/board/profile/') > 0) {
        $('#profile-menu').addClass('mm-active');
    }

    // dashboard index "View Details", "Edit" and "Delete"
    $(document).on('click', '.index_details, .index_edit, .index_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('index_details');
        let edit = $(this).hasClass('index_edit');
        let del = $(this).hasClass('index_del');
        $.ajax({
            method: 'POST',
            url: 'index_edit',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del || edit) {

                    // modal information

                    // date
                    $('.modal_entry_date span').text(data['entry']['date']); // for del form
                    $('.modal_entry_date').val(data['entry']['date']); // for edit form
//                    $('.modal_entry_date').val(data['entry']['date']);

                    // category information
                    $('.modal_category_del span').text(data['category']['name']); // for del form
                    $('.modal_category option[value="' + data['category']['id'] + '"]').prop('selected', true); // for edit form

                    // description
                    if (data['entry']['description']) {
                        $('.modal_description span').text(data['entry']['description']);
//                        $('.note_modal').val(data['entry']['description']);
//                        $('.modal_entry_description').removeClass('d-none');
//                        $('.modal_entry_amount').removeClass('mb-4').addClass('mb-2')
                    }

                    // establishment
                    $('.modal_establishment_del span').text(data['establishment']['name']);
                    $('.modal_establishment option[value="' + data['establishment']['id'] + '"]').prop('selected', true);
//                    $('.modal_establishment_name option[value="'+data['establishment']['name']+'"]').prop('selected', true);

                    // account
//                    $('.modal_account_name span').text(data['account']['name']);
                    if (data['account']['is_bank'] == true) {
                        $('.modal_account option[value="' + data['account']['id'] + '"]').prop('selected', true);
//                        $('.modal_bank span').text(data['account']['bank']);
//                        $('.modal_branch span').text(data['account']['branch']);
//                        $('.modal_account span').text(data['account']['account']);
                    }
//                    else {
//                        $('.modal_account_description span').text(data['account']['description']);
////                        $('.bank_account_modal').removeClass('d-none');
//                    }

                    // income or expense
//                    let type = data['entry']['amount'] < 0 ? 'Saída' : 'Entrada';
//                    $('.modal_entry_type span').text(type);
                    let type_transaction = data['entry']['amount'] < 0 ? 2 : 1;
                    $('.modal_transaction_type option[value="'+type_transaction+'"]').prop('selected', true);

                    $('.modal_transaction_type span').text(type_transaction == 2 ? 'Saída' : 'Entrada'); // for del form

                    // situation
                    if (data['entry']['situation'] == 1) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-primary ').text('Pago');
                    } else if (data['entry']['situation'] == 2) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-secondary ').text('Aberto');
                    } else if (data['entry']['situation'] == 3) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-danger ').text('Em Negociação');
                    } else if (data['entry']['situation'] == 4) {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-success ').text('Recebido');
                    } else {
                        $('.modal_entry_status').removeClass(function (index, className) {
                            return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                        }).addClass('badge-soft-warning ').text('Agendado');
                    }
                    $('.situation_modal option[value="'+data['entry']['situation']+'"]').prop('selected', true);

                    // amount
                    amount = Math.abs(data['entry']['amount'])
                    $('.modal_amount').val(formatCurrency(amount).replace('R$', ''));
                    $('.modal_amount span').text(formatCurrency(amount));

                }

                if (del) {
                    $('#del_index').val(formData['detail']);
                    $('#modal_entry_date_delete').val(data['entry']['date']);

                } else if (edit) {

                    $('#edit_index').val(formData['detail']);
                }
            },
            error: function(data) {
                alert('Data not found');
            }

        });
    });

//    // dashboard index - category selection
//    $(document).on('change', '.category_modal, .category_modal_edit', function() {
//        let formData = {'category': $(this).val()}
//        let edit = $(this).hasClass('category_modal_edit');
//        $.ajax({
//            method: 'POST',
//            url: 'dashboard_category_ajax',
//            headers: {'X-CSRFToken': csrftoken},
//            mode: 'same-origin', // Do not send CSRF token to another domain.
//            data: formData,
//            success: function(data) {
//                data = JSON.parse(data);
//                if (edit) {
//                    $('.subcategory_modal').find('option').remove().end()
//                    $(data).each(function(index, value) {
//                        $('.subcategory_modal').append(new Option(value['subcategory'], value['slug']));
//                    });
//                } else {
//                    $('#subcategory').find('option').remove().end()
//                    $(data).each(function(index, value) {
//                        $('#subcategory').append(new Option(value['subcategory'], value['slug']));
//                    });
//                }
//            },
//            error: function(data) {
//                alert('Data not found');
//            }
//        });
//    });

    // dashboard index - calendar
    $(document).on('click', '.move-month', function() {
        let actual = window.location.href;
        actual = actual.split('?')[0]
        let renderRange = $('#renderRange').val()
        let month = parseInt(renderRange.split('.')[0])
        let year = parseInt(renderRange.split('.')[1])

        let action = $(this).data('value');
        if (action == 'move-next') {
            if (month == 12) {
                month = 1
                year = year + 1
            } else {
                month = month + 1
            }
        } else if (action == 'move-prev') {
            if (month == 1) {
                month = 12
                year = year - 1
            } else {
                month = month - 1
            }
        } else if (action == 'goto') {
            let goto = $('#goto').val()
            if (isDateShort(goto)) {
                month = goto.split('/')[0]
                year = goto.split('/')[1]
            }
        }
        window.location.href = actual+'?y='+year+'&m='+month
    });

    // dashboard index - calendar
    $(document).on('click', '.move-today', function() {
        let actual = window.location.href;
        actual = actual.split('?')[0]
        window.location.href = actual
    });
    
    // beneficiaries labels "View Details", "Edit" and "Delete"
    $(document).on('click', '.beneficiary_details, .beneficiary_edit, .beneficiary_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('beneficiary_details');
        let edit = $(this).hasClass('beneficiary_edit');
        let del = $(this).hasClass('beneficiary_del');
        $.ajax({
            method: 'POST',
            url: 'labels_beneficiaries_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    $('.modal_description span').text(data['description']);
                    $('.modal_name span').text(data['name']);
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                    } else {
                        $('#del_beneficiary').val(formData['detail'])
                    }
                } else if (edit) {
                    $('#description').val(data['description']);
                    $('#name').val(data['name']);
                    $('#edit_beneficiary').val(formData['detail'])
                }
            },
            error: function(data) {
                alert('Data not found');
            }

        });
    });

    // beneficiaries labels "Edit Beneficiary Type"
    $(document).on('click', '#checkbox_edit', function() {
        let box = $('#checkbox_edit').prop('checked');
        if (box) {
            $('.checkbox_edit').prop('disabled', false);
            $('.checkbox_edit').prop('required', true);
            $('.checkbox_edit').addClass('valid_entry');
        } else {
            $('.checkbox_edit').prop('disabled', true);
            $('.checkbox_edit').prop('required', false);
            $('.checkbox_edit').removeClass('valid_entry');
        }
    });

    // categories labels form select2
    $('.s2_tags_true').select2({
        tags: true
    });

    // categories labels form - check category existence to block type
    $(document).on('change', '.check_existence', function() {
        let formData = {'name': $(this).val()}
        $.ajax({
            method: 'POST',
            url: 'labels_categories_form_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (data) {
                    if (data['type'] == 1) {
                        $('#inlineRadio1').prop('checked', true);
                        $('#inlineRadio2').prop('checked', false);
                    } else {
                        $('#inlineRadio1').prop('checked', false);
                        $('#inlineRadio2').prop('checked', true);
                    }
                    $('#inlineRadio1').prop('disabled', true);
                    $('#inlineRadio1').prop('required', false);
                    $('#inlineRadio2').prop('disabled', true);
                    $('#inlineRadio2').prop('required', false);
                } else {
                    $('#inlineRadio1').prop('disabled', false);
                    $('#inlineRadio1').prop('required', true);
                    $('#inlineRadio2').prop('disabled', false);
                    $('#inlineRadio2').prop('required', true);
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // categories labels "View Details", "Edit" and "Delete"
    $(document).on('click', '.categories_details, .categories_edit, .categories_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('categories_details');
        let edit = $(this).hasClass('categories_edit');
        let del = $(this).hasClass('categories_del');
        $.ajax({
            method: 'POST',
            url: 'labels_categories_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    $('.modal_category span').text(data['category']);
                    $('.modal_subcategory span').text(data['subcategory']);
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                        if (data['type'] == 1) {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-success ').text('Renda');
                        } else {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-danger ').text('Gasto');
                        }
                    } else {
                        $('#del_subcategory').val(formData['detail'])
                    }
                } else if (edit) {
                    if (data['type'] == 1) {
                        $('#inlineRadio1').prop('checked', true);
                        $('#inlineRadio2').prop('checked', false);
                    } else {
                        $('#inlineRadio1').prop('checked', false);
                        $('#inlineRadio2').prop('checked', true);
                    }
                    $('#inlineRadio').val(data['type']);
                    $('#name').val(data['category']);
                    $('#subname').val(data['subcategory']);
                    $('#edit_category').val(formData['detail'])
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // clients labels "View Details", "Edit" and "Delete"
    $(document).on('click', '.clients_details, .clients_edit, .clients_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('clients_details');
        let edit = $(this).hasClass('clients_edit');
        let del = $(this).hasClass('clients_del');
        $.ajax({
            method: 'POST',
            url: 'labels_clients_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    let noneCounter = 0;
                    $('.modal_client span').text(data['client']);
                    $('.modal_region span').text(data['region']);
                    $('.modal_state span').text(data['state']);
                    $('.modal_city span').text(data['city']);
                    $('img.modal_flag').attr('src', '/static/board/images/flags/'+data['flag']);
                    if (data['email']) {
                        $('.modal_email').removeClass('d-none');
                        $('.modal_email span').text(data['email']);
                        otherInformation();
                    } else {
                        $('.modal_email').addClass('d-none');
                        noneCounter += 1;
                    }
                    if (data['phone']) {
                        $('.modal_phone').removeClass('d-none');
                        $('.modal_phone span').removeClass(function (index, className) {
                            return (className.match (/(^|\s)mask_phone_\S+/g) || []).join(' ');
                        }).unmask().addClass('mask_phone_'+data['region'].replaceAll(' ', '_').toLowerCase()).text(data['phone']);
                        otherInformation();
                        initMasks();
                    } else {
                        $('.modal_phone').addClass('d-none');
                        $('.modal_phone span').removeClass(function (index, className) {
                            return (className.match (/(^|\s)mask_phone_\S+/g) || []).join(' ');
                        }).unmask().text('');
                        noneCounter += 1;
                    }
                    if (data['responsible']) {
                        $('.modal_responsible').removeClass('d-none');
                        $('.modal_responsible span').text(data['responsible']);
                        otherInformation();
                    } else {
                        $('.modal_responsible').addClass('d-none');
                        noneCounter += 1;
                    }

                    if (noneCounter == 3) {
                        $('.other_information').addClass('d-none');
                        $('.modal_city').removeClass('mb-4').addClass('mb-2');
                    }
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                    } else {
                        $('#del_client').val(formData['detail']);
                    }

                    function otherInformation() {
                        if ($('.other_information').hasClass('d-none')) {
                            $('.other_information').removeClass('d-none');
                        }
                        if ($('.modal_city').hasClass('mb-2')) {
                            $('.modal_city').removeClass('mb-2').addClass('mb-4');
                        }
                    }
                } else if (edit) {
                    $('#client').val(data['client']);
                    $('#country option[value="'+data['region_val']+'"]').prop('selected', true);

                    $('#state').find('option').remove().end()
                    $(data['state_list']).each(function(index, value) {
                        $('#state').append(new Option(value['state'], value['id']));
                    });
                    $('#state option[value="'+data['state_val']+'"]').prop('selected', true);

                    $('#city').val(data['city']);
                    $('#email').val(data['email']);

                    $('#phone').val(data['phone']);
                    $('#phone').removeClass(function (index, className) {
                        return (className.match (/(^|\s)mask_phone_\S+/g) || []).join(' ');
                    }).unmask().addClass('mask_phone_'+data['region'].replaceAll(' ', '_').toLowerCase())
                    initMasks();

                    $('#responsible').val(data['responsible']);
                    $('#edit_client').val(formData['detail']);
                }
            },
            error: function(data) {
                alert('Data not found');
            }

        });
    });

    // clients labels - country selection
    $(document).on('change', '.country_modal', function() {
        let formData = {'country': $(this).val()}
        $.ajax({
            method: 'POST',
            url: 'labels_clients_edit_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                $('#state').find('option').remove().end()
                $(data).each(function(index, value) {
                    $('#state').append(new Option(value['state'], value['id']));
                });
                $('#phone').val('');
                $('#phone').removeClass(function (index, className) {
                    return (className.match (/(^|\s)mask_phone_\S+/g) || []).join(' ');
                }).unmask().addClass('mask_phone_'+data[0]['region'].replaceAll(' ', '_').toLowerCase())
                initMasks();
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // clients labels form - country selection
    $(document).on('change', '.country_select', function() {
        let formData = {'country': $(this).val()}
        $.ajax({
            method: 'POST',
            url: 'labels_clients_form_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                $('.state_display').find('option').remove().end()
                $(data).each(function(index, value) {
                    $('.state_display').append(new Option(value['state'], value['id']));
                });
                $('.phone_mask').prop('disabled', false).val('');
                $('.phone_mask').removeClass(function (index, className) {
                    return (className.match (/(^|\s)mask_phone_\S+/g) || []).join(' ');
                }).unmask().addClass('mask_phone_'+data[0]['region'].replaceAll(' ', '_').toLowerCase())
                initMasks();
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // clients labels form - optional entries
    $(document).on('click', '.valid_opt_email, .valid_opt_entry, .valid_opt_entry_nd', function() {
        $(this).prop('required', false);
    });

    // financial labels "View Details", "Edit" and "Delete"
    $(document).on('click', '.financial_details, .financial_edit, .financial_del', function() {
        let formData = {'detail': $(this).data('value')}
        let details = $(this).hasClass('financial_details');
        let edit = $(this).hasClass('financial_edit');
        let del = $(this).hasClass('financial_del');
        $.ajax({
            method: 'POST',
            url: 'labels_financial_ajax',
            headers: {'X-CSRFToken': csrftoken},
            mode: 'same-origin', // Do not send CSRF token to another domain.
            data: formData,
            success: function(data) {
                data = JSON.parse(data);
                if (details || del) {
                    if (details) {
                        $('.modal_register_date span').text(datetimeToDateFormat(data['register_date']));
                        if (data['type'] == 1) {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-primary ').text('Cost Center');
                        } else {
                            $('.modal_type').removeClass(function (index, className) {
                                return (className.match (/(^|\s)badge-soft-\S+/g) || []).join(' ');
                            }).addClass('badge-soft-warning ').text('Bank Account');
                        }
                    } else {
                        $('#del_financial').val(formData['detail'])
                    }
                    if (data['type'] == 1) {
                        $('.modal_cost_center span').text(data['cost_center']);
                        if (data['description']) {
                            $('.modal_description').removeClass('d-none');
                            $('.modal_description span').text(data['description']);
                        } else {
                            $('.modal_description').addClass('d-none');
                        }
                        if (details) {
                            $('#cost_center_modal').removeClass('d-none');
                            $('#bank_account_modal').addClass('d-none');
                        } else {
                            $('#cost_center_modal_remove').removeClass('d-none');
                            $('#bank_account_modal_remove').addClass('d-none');
                        }
                    } else {
                        $('.modal_bank span').text(data['bank']);
                        $('.modal_branch span').text(data['branch']);
                        $('.modal_account span').text(data['account']);
                        if (details) {
                            $('#bank_account_modal').removeClass('d-none');
                            $('#cost_center_modal').addClass('d-none');
                        } else {
                            $('#bank_account_modal_remove').removeClass('d-none');
                            $('#cost_center_modal_remove').addClass('d-none');
                        }
                    }
                } else if (edit) {
                    if (data['type'] == 1) {
                        $('#bank').val(data['bank']).prop('required', false);
                        $('#branch').val(data['branch']).prop('required', false);
                        $('#account').val(data['account']).prop('required', false);

                        $('#cost_center').val(data['cost_center']).prop('required', true);
                        $('#description').val(data['description']);
                        $('.cost_center_modal_edit').removeClass('d-none');
                        $('.bank_account_modal_edit').addClass('d-none');
                    } else {
                        $('#cost_center').val(data['cost_center']).prop('required', false);

                        $('#bank').val(data['bank']).prop('required', true);
                        $('#branch').val(data['branch']).prop('required', true);
                        $('#account').val(data['account']).prop('required', true);
                        $('.bank_account_modal_edit').removeClass('d-none');
                        $('.cost_center_modal_edit').addClass('d-none');
                    }
                    $('#edit_financial').val(formData['detail']);
                }
            },
            error: function(data) {
                alert('Data not found');
            }
        });
    });

    // financial labels form controll
    $(document).on('change', '#financial_label_choise', function() {
        let label = $(this).val()
        if (label == 'CC') {
            $('#account_label').addClass('d-none');
            $('#cost_center_label').removeClass('d-none');
        } else if (label == 'BA') {
            $('#account_label').removeClass('d-none');
            $('#cost_center_label').addClass('d-none');
        }
    });  
});

// DATETIME TO DATE FORMAT
function datetimeToDateFormat(date) {
    var dateTmp = date.split('T')[0].split('-');
    return [dateTmp[1], dateTmp[2], dateTmp[0]].join('/');
}

// FORMAT CURRENCY
function formatCurrency(amount) {
    amount = new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL',
        minimumFractionDigits: 2,
        maximumFractionDigits: 2
    }).format(amount);
    return amount
}

// DATE VALIDATION
function isDateShort(value) {
    return moment(value, 'MM/YYYY', true).isValid();
  }

function isEmpty(obj) {
    return Object.keys(obj).length === 0;
}